@page "/Landscape"
@using MASA.PM.Contracts.Base.Enum
@using MASA.PM.Contracts.Base.ViewModel


<div>
    <MRow NoGutters>

        <MNavigationDrawer Permanent Class="rounded-4" Width="242" Style="height:calc(100vh - 110px );">
            <div style="min-width:242px; display:flex; flex-direction:column; align-items:center; overflow: auto; height:calc(100vh - 206px );">
                <MList Width="194">
                    <MListItemGroup Class="rounded-2"
                                    @bind-Value="_selectedEnvId"
                                    Mandatory
                                    Color="#A3AED0">
                        @foreach (var env in _environments)
                        {
                            <MListItem Class="rounded-2 env-list" Value="env.Id" Dense OnClick="@(()=>GetClustersByEnvIdAsync(env.Id))">
                                <ItemContent>
                                    <MListItemContent>
                                        <MListItemTitle>@env.Name</MListItemTitle>
                                    </MListItemContent>
                                    @if (context.Active)
                                    {
                                        <MListItemIcon Class="d-flex align-center pt-1">
                                            <MButton StopPropagation Icon OnClick="()=>EditEnvAsync(env.Id)">
                                                <MIcon>mdi-pencil</MIcon>
                                            </MButton>
                                        </MListItemIcon>
                                    }
                                </ItemContent>
                            </MListItem>
                        }
                    </MListItemGroup>
                </MList>
            </div>
            <MButton OnClick="()=>ShowEnvModalAsync()" Width="194" Tile Text Style="height: 54px; border: dashed 1px rgba(0, 0, 0, 0.12); position: fixed; left:24px; right:24px; bottom: 24px;">
                <MIcon Left>mdi-plus</MIcon>新增环境
            </MButton>
        </MNavigationDrawer>

        <div class="pl-6" style="width: calc(100% - 242px); overflow: hidden; display:block;">
            <MRow NoGutters Align="AlignTypes.Center" Class="env-toolbar rounded-5" Style="height:102px;background:#fff;padding:0 12px;">
                <MCard Style="padding-right: 125px;">
                    <MTabs @bind-Value="_selectEnvClusterId" Class="cluster-tabs" BackgroundColor="#fff" ShowArrows="@(true)" ActiveClass="cluster-tab-active" HideSlider>
                        @foreach (var cluster in _clusters)
                        {
                            StringNumber envClusterId = (StringNumber)cluster.EnvironmentClusterId;
                            <MTab Value="envClusterId" OnClick="()=>GetProjectByEnvClusterIdAsync(cluster.EnvironmentClusterId)">
                                @cluster.Name
                                @if (cluster.EnvironmentClusterId == _selectEnvClusterId.AsT1)
                                {
                                    <MButton StopPropagation Icon OnClick="()=>EditClusterAsync(cluster.Id)">
                                        <MIcon>mdi-pencil</MIcon>
                                    </MButton>
                                }
                            </MTab>
                        }
                    </MTabs>
                </MCard>
                <MButton OnClick="()=>ShowClusterModalAsync()" Width="120" Tile Text Style="position:fixed; right:48px; height: 54px; border: dashed 1px rgba(0, 0, 0, 0.12);">
                    <MIcon Left>mdi-plus</MIcon>新增集群
                </MButton>
            </MRow>
            <div class="rounded-5 mt-6 py-2" style="height:calc(100vh - 234px );background:#fff;display:flex; flex-direction:column; justify-content:space-between; overflow:auto;">
                <div>
                    <MExpansionPanels Flat Accordion>
                        @foreach (var project in _projects)
                        {
                            var apps = _apps.Where(app => app.ProjectId == project.Id).ToList();
                            <MExpansionPanel Style="margin-bottom: 12px; border-radius: 20px;">
                                <MExpansionPanelHeader>
                                    <span style="display:flex;align-items:center;margin-right:10px;">
                                        <div class="text-h6">
                                            @project.Name
                                            <span class="ml-2 text-caption">|</span>
                                            <sapn class="ml-1 text-caption">应用数量:@apps.Count</sapn>
                                            <div class="text-caption" style="padding:0">@project.Description</div>
                                        </div>
                                        <MSpacer />
                                        <div style="display:flex;align-items:center;">
                                            <MButton Icon StopPropagation Class="mr-1" OnClick="()=>EditProjectAsync(project.Id)"><MIcon>mdi-pencil</MIcon></MButton>
                                            <MDivider Vertical Style="height: 20px;margin: 7px 8px 0 8px;" />
                                        </div>
                                    </span>
                                </MExpansionPanelHeader>
                                <MExpansionPanelContent>
                                    <MRow>
                                        @foreach (var app in apps)
                                        {
                                            @if (app.ProjectId == project.Id)
                                            {
                                                <MCol Lg="4" Md="6" Sm="1">
                                                    <AppCard App="app" EnvironmentClusters="app.EnvironmentClusters" OnClick="()=>UpdateAppAsync(app.Id,project.Id)"></AppCard>
                                                </MCol>
                                            }
                                        }
                                        <MCol Lg="4" Md="6" Sm="1">
                                            <MRow NoGutters>
                                                <MCol Class="pr-2">
                                                    <MCard Outlined Style="border-radius:10px !important; display:flex; align-items: center; justify-content: center; border-style: dashed;" MinHeight="162">
                                                        <MButton Ripple=false Plain OnClick="()=>ShowAppModal(project.Id)"><MIcon Left>mdi-plus</MIcon>新增应用</MButton>
                                                    </MCard>
                                                </MCol>
                                                <MCol Class="pr-2">
                                                    <MCard Outlined Style="border-radius:10px !important; display:flex; align-items: center; justify-content: center; border-style: dashed;" MinHeight="162">
                                                        <MButton Ripple=false Plain OnClick="()=>ShowRelationAppModalAsync(project.Id)"><MIcon Left>mdi-plus</MIcon>选择已有应用</MButton>
                                                    </MCard>
                                                </MCol>
                                            </MRow>
                                        </MCol>
                                    </MRow>
                                    <div class="d-flex justify-space-between mt-3">
                                        <div>
                                            <img style="height:24px;width:24px" src="/img/avatar/9.svg">
                                        </div>
                                        <div class="text-caption">编辑于一小时前</div>
                                    </div>
                                </MExpansionPanelContent>
                            </MExpansionPanel>
                        }
                    </MExpansionPanels>
                </div>
                <MCard Outlined Class="mb-4 mx-6" Style="padding:0 6px; border-radius:0 !important; display: flex; justify-content: center; align-items: center; border-style: dashed;" Height=54>
                    <MButton Ripple=false Plain OnClick="()=>ShowProjectModalAsync()">
                        <MIcon Left>mdi-plus</MIcon>新增项目
                    </MButton>
                </MCard>
            </div>
        </div>

    </MRow>
</div>

<FormModal Visible="_envFormModel.Visible"
           Title="@(_envFormModel.HasValue ?"编辑环境":"新增环境")"
           Width="684"
           Model="_envFormModel.Data"
           OnCancel="_envFormModel.Hide">
    <ChildContent>
        <MTextField Outlined Label="环境名称" @bind-Value="_envFormModel.Data.Name"></MTextField>
        <MAutocomplete @bind-Value="_envFormModel.Data.ClusterIds"
                       Items="_allClusters"
                       ItemText="r=>r.Name"
                       ItemValue="r=>r.Id"
                       Outlined
                       Label="关联集群"
                       Multiple>
            <SelectionContent Context="_context">
                <MChip Class="text-btn" Small TextColor="sample-green" Color="sample-green-lighten-5">
                    @_context.Item.Name
                </MChip>
            </SelectionContent>
        </MAutocomplete>
        <MTextarea Outlined Label="环境描述" @bind-Value="_envFormModel.Data.Description"></MTextarea>
        @if (_envFormModel.HasValue)
        {
            <MRow Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                <MCol Cols=6>创建人: @_envDetail.Creator</MCol>
                <MCol Class="d-flex justify-end" Cols=6>创建时间: @_envDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>修改人: @_envDetail.Modifier</MCol>
                <MCol Class="d-flex justify-end" Cols=6>修改时间: @_envDetail.ModificationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>集群数量：3</MCol>
            </MRow>
        }
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            @if (_envFormModel.HasValue)
            {
                <MButton OnClick="DeleteEnv" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">删除</MButton>
            }
            <MButton OnClick="SubmitEnv" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">@(_envFormModel.HasValue?"保存":"提交")</MButton>
        </div>
    </ActionsContent>
</FormModal>

<FormModal Visible="_clusterFormModel.Visible"
           Title="@(_clusterFormModel.HasValue ?"编辑集群":"新增集群")"
           Width="684"
           Model="_clusterFormModel.Data"
           OnCancel="_clusterFormModel.Hide">
    <ChildContent>
        <MTextField Outlined Label="集群名称" @bind-Value="_clusterFormModel.Data.Name"></MTextField>
        <MAutocomplete @bind-Value="_clusterFormModel.Data.EnvironmentIds"
                       Items="_allEnvs"
                       ItemText="r=>r.Name"
                       ItemValue="r=>r.Id"
                       Outlined
                       Label="关联环境"
                       Multiple>
            <SelectionContent Context="_context">
                <MChip Class="text-btn" Small TextColor="sample-green" Color="sample-green-lighten-5">
                    @_context.Item.Name
                </MChip>
            </SelectionContent>
        </MAutocomplete>
        <MTextarea Outlined Label="集群描述" @bind-Value="_clusterFormModel.Data.Description"></MTextarea>
        @if (_clusterFormModel.HasValue)
        {
            <MRow Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                <MCol Cols=6>创建人: @_clusterDetail.Creator</MCol>
                <MCol Class="d-flex justify-end" Cols=6>创建时间: @_clusterDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>修改人: @_clusterDetail.Modifier</MCol>
                <MCol Class="d-flex justify-end" Cols=6>修改时间: @_clusterDetail.ModificationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>项目数量：3</MCol>
            </MRow>
        }
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            @if (_clusterFormModel.HasValue)
            {
                <MButton OnClick="DeleteCluster" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">删除</MButton>
            }
            <MButton OnClick="SubmitCluster" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">@(_envFormModel.HasValue?"保存":"提交")</MButton>
        </div>
    </ActionsContent>
</FormModal>

<FormModal Visible="_projectFormModel.Visible"
           Title="@(_projectFormModel.HasValue ?"编辑项目":"新增项目")"
           Width="684"
           Model="_projectFormModel.Data"
           OnCancel="ProjectHide">
    <ChildContent>
        <MTextField Outlined Label="项目名称" @bind-Value="_projectFormModel.Data.Name"></MTextField>
        <MAutocomplete @bind-Value="_friends"
                       Disabled="IsUpdating"
                       Items="_people"
                       Chips
                       SmallChips
                       Outlined
                       Color="blue-grey lighten-2"
                       Label="所属项目团队"
                       ItemText="r=>r.Name"
                       ItemValue="r=>r.Name"
                       Multiple>
            <SelectionContent Context="data">
                <MChip Small Close
                       OnCloseClick="()=>Remove(data.Item)">
                    <MAvatar Left>
                        <MImage Src="@data.Item.Avatar"></MImage>
                    </MAvatar>
                    @data.Item.Name
                </MChip>
            </SelectionContent>
            <ItemContent Context="data">
                @if (data.Item is not object)
                {
                    <MListItemContent>@data.Item</MListItemContent>
                }
                else
                {
                    <MListItemAvatar>
                        <img src="@data.Item.Avatar">
                    </MListItemAvatar>
                    <MListItemContent>
                        <MListItemTitle>
                            @((MarkupString)data.Item.Name)
                        </MListItemTitle>
                        <MListItemSubtitle>
                            @((MarkupString)data.Item.Group)
                        </MListItemSubtitle>
                    </MListItemContent>
                }
            </ItemContent>
        </MAutocomplete>
        <MTextField Disabled="@(_projectFormModel.HasValue)" Outlined Label="项目标识" @bind-Value="_projectFormModel.Data.Identity"></MTextField>
        <MSelect @bind-Value="_selectProjectType"
                 Disabled="@(_projectFormModel.HasValue)"
                 Items="Enum<ProjectTypes>.GetEnumObjectList()"
                 ItemText="r=>r.Name"
                 ItemValue="r=>r.Value"
                 Outlined
                 Label="项目类型">
        </MSelect>
        <MTextarea Outlined Label="项目描述" @bind-Value="_projectFormModel.Data.Description"></MTextarea>
        @if (_projectFormModel.HasValue)
        {
            <MRow Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                <MCol Cols=6>创建人: @_projectDetail.Creator</MCol>
                <MCol Class="d-flex justify-end" Cols=6>创建时间: @_projectDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>修改人: @_projectDetail.Modifier</MCol>
                <MCol Class="d-flex justify-end" Cols=6>修改时间: @_projectDetail.ModificationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
            </MRow>
        }
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            @if (_projectFormModel.HasValue)
            {
                <MButton OnClick="DeleteProject" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">删除</MButton>
            }
            <MButton OnClick="SubmitProject" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">@(_envFormModel.HasValue?"保存":"提交")</MButton>
        </div>
    </ActionsContent>
</FormModal>

<FormModal Visible="_appFormModel.Visible"
           Title="@(_appFormModel.HasValue ?"编辑应用":"新增应用")"
           Width="684"
           Model="_appFormModel.Data"
           OnCancel="AppHide">
    <ChildContent>
        <MTextField Outlined Label="应用名称" @bind-Value="_appFormModel.Data.Name"></MTextField>
        <MSelect @bind-Value="_selectAppType"
                 Disabled="@(_appFormModel.HasValue)"
                 Items="Enum<AppTypes>.GetEnumObjectList()"
                 ItemText="r=>r.Name"
                 ItemValue="r=>r.Value"
                 Outlined
                 Label="应用类型">
        </MSelect>
        <FadeTransition>
            <Element Show="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                <MSelect @bind-Value="_selectAppServiceType"
                         Disabled="@(_appFormModel.HasValue)"
                         Items="Enum<ServiceTypes>.GetEnumObjectList()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         Outlined
                         Label="服务类型">
                </MSelect>
            </Element>
        </FadeTransition>
        <MTextField Outlined Label="Url" @bind-Value="_appFormModel.Data.Url"></MTextField>
        <FadeTransition>
            <Element Show="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                <MTextField Outlined Label="Swagger Url" @bind-Value="_appFormModel.Data.SwaggerUrl"></MTextField>
            </Element>
        </FadeTransition>
        <MTextField Disabled="@(_appFormModel.HasValue)" Outlined Label="应用标识" Placeholder="若选择Dapr，应用标识格式建议：app-id，用 - 来划分" @bind-Value="_appFormModel.Data.Identity"></MTextField>
        <MTextarea Outlined Label="集群描述" @bind-Value="_appFormModel.Data.Description"></MTextarea>
        @if (_appFormModel.HasValue)
        {
            <MRow Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                <MCol Cols=6>创建人: @_appDetail.Creator</MCol>
                <MCol Class="d-flex justify-end" Cols=6>创建时间: @_appDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>修改人: @_appDetail.Modifier</MCol>
                <MCol Class="d-flex justify-end" Cols=6>修改时间: @_appDetail.ModificationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
            </MRow>
        }
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            @if (_appFormModel.HasValue)
            {
                <MButton OnClick="RemoveAppAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">删除</MButton>
            }
            <MButton OnClick="SubmitAppAsync" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">@(_appFormModel.HasValue?"保存":"提交")</MButton>
        </div>
    </ActionsContent>
</FormModal>

<FormModal Visible="_relationAppVisible"
           Title="新增应用"
           Width="684"
           OnCancel="RelationAppHide">
    <ChildContent>
        <MAutocomplete TItem="AppViewModel"
                       TValue="int"
                       TItemValue="int"
                       Items="_allApps"
                       ItemText="r=>r.Name"
                       ItemValue="r=>r.Id"
                       Outlined
                       OnSelectedItemUpdate="RelationAppSelectChange"
                       Label="选择已有应用">
            <SelectionContent Context="_context">
                <MChip Class="text-btn" Small TextColor="sample-green" Color="sample-green-lighten-5">
                    @_context.Item.Name
                </MChip>
            </SelectionContent>
        </MAutocomplete>
        <MSelect @bind-Value="_selectAppType"
                 Disabled
                 Items="Enum<AppTypes>.GetEnumObjectList()"
                 ItemText="r=>r.Name"
                 ItemValue="r=>r.Value"
                 Outlined
                 Label="应用类型">
        </MSelect>
        <FadeTransition>
            <Element Show="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                <MSelect @bind-Value="_selectAppServiceType"
                         Disabled
                         Items="Enum<ServiceTypes>.GetEnumObjectList()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         Outlined
                         Label="服务类型">
                </MSelect>
            </Element>
        </FadeTransition>
        <MTextField Disabled Outlined Label="Url" @bind-Value="_appDetail.Url"></MTextField>
        <FadeTransition>
            <Element Show="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                <MTextField Disabled Outlined Label="Swagger Url" @bind-Value="_appDetail.SwaggerUrl"></MTextField>
            </Element>
        </FadeTransition>
        <MTextField Disabled Outlined Label="应用标识" Placeholder="若选择Dapr，应用标识格式建议：app-id，用 - 来划分" @bind-Value="_appDetail.Identity"></MTextField>
        <MTextarea Disabled Outlined Label="集群描述" @bind-Value="_appDetail.Description"></MTextarea>
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            <MButton OnClick="SubmitRelationAppAsync" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">提交</MButton>
        </div>
    </ActionsContent>
</FormModal>

@code {

    private bool _autoUpdate = true;
    private List<string> _friends = new()
        {
            "Sandra Adams",
            "Britta Holt"
        };
    private bool _isUpdating;
    private string _name = "Midnight Crew";

    public class Person
    {
        public Guid Id => Guid.NewGuid();

        public string Header { get; set; }

        public string Name { get; set; }

        public string Group { get; set; }

        public string Avatar { get; set; }

        public bool Divider { get; set; }
    }

    private List<Person> _people = new List<Person>
        {
            new Person
            {
                Name="Sandra Adams",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png"
            },
            new Person
            {
                Name="Ali Connors",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png"
            },
            new Person
            {
                Name="Trevor Hansen",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png"
            },
            new Person
            {
                Name="Tucker Smith",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png"
            },
            new Person
            {
                Divider=true,
                Name="Group 1"
            }
        };
    private string _title = "The summer breeze";

    protected bool IsUpdating
    {
        get
        {
            return _isUpdating;
        }
        set
        {
            _isUpdating = value;
            _ = Task.Run(async () =>
            {
                await Task.Delay(3000);
                _isUpdating = false;
                await InvokeAsync(StateHasChanged);
            });
        }
    }

    public void Remove(Person item)
    {
        var index = _friends.IndexOf(item.Name);
        if (index >= 0)
        {
            _friends.RemoveAt(index);
        }
    }
}
